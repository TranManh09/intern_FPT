bài tập ass1

Viết chương trình tìm số fibonacci thứ N ( 1 <= N <= 100).


Yêu cầu: áp dụng coding convention => giảng viên sẽ cung cấp và giải thích
         Chia chương trình thành các file file: main.c, fibonaci.c, fibonaci.h
         Yêu cầu từ bài đầu trở đi sử dụng DevC++ để code.

Yêu cầu lúc nộp bài: xóa file exe trong project đi. Và nén project thành 1 file .zip với tiêu đề: Ho_va_ten_MSSV_Truong_AssX.zip
     Ví dụ: Với assignment 1 và account NgocVM2 ==> VuMinhNgoc_20152718_Ass1.zip

ass2:

Viết một chương trình quản lý mảng số nguyên với các yêu cầu như sau:
Khi chạy chương trình sẽ hiện lời giới thiệu chương trình “CT Quản Lý dãy số bằng mảng” và
hướng dẫn sử dụng với các tính năng của chương trình:
Mảng đó là 100 phần tử -> biến global ( type là uint8_t -> FF = 255)
Gía trị đúng là trong khoảng 0 -100:
- Nhập ‘c’ để clear data của mảng cũ và cho người dùng nhập.
- Nhập ‘p’ để in dãy (Nếu dãy chưa có giá trị thì báo dãy trống).
- Nhập ‘i’ để thêm 1 phần tử vào dãy với vị trí k (nếu có rồi thì không cho nữa).
- Nhập ‘d’ để xóa 1 phần tử tại vị trí thứ k (Nếu vị trí k không chứa gía trị thì báo ko có phần tử k).
- Nhập ‘s’ để in ra dãy sắp xếp dãy số theo chiều tăng dần.
- Nhập ‘x’ để in ra dãy sắp xếp theo chiều giảm.
- Nhập ‘t’ để tìm kiếm 1 số x có trong dãy không (x nhập từ bàn phím)? -> nếu có thì đưa ra vị trí.
- Nhập ‘a’ để in ra màn hình số lớn nhất.
- Nhập ‘w’ để in ra màn hình số nhỏ nhất.
- Nếu nhập ‘e’ thì thoát chương trình.

ass3:

Viết chương trình cấp phát bộ nhớ động 10 bytes cho 1 con trỏ,
với mẫu hàm được cung cấp như sau:
#include <stdint.h>
#include <stdbool.h>
bool allocate10Bytes(uint8_t *outPtr);
- outPtr: output pointer
- return: true: Nếu cấp phát thành công.
         false: Nếu cấp phát bị lỗi.

Yêu cầu:
Không được thay đổi bất kỳ yêu cầu nào của đề, ví dụ đề yêu cầu viết hàm:
bool allocate10Bytes(uint8_t *outPtr);
Học viên viết hàm allocate10bytes(uint8_t *outPtr);
-> không viết hoa “b” -> vi phạm yêu cầu của đề bài và sẽ bị 0 điểm.

ass4:

Viết macro, ví dụ sử dụng demo

set bit thứ n trong 1 thanh ghi có địa chi cho trước
REG_BIT_SET32(add,n)
set 1 bit đơn lẻ, bao toàn những bit còn lại

REG_BIT_CLEAR32(add,n)
clear 1 bit đơn lẻ, bao toàn những bit còn lại

SWAP_BYTE32(add)
convert big endian-litte endian  

SWAP_BYTE16(add)
convert big endian-litte endian

add: địa chỉ
n: vị trí từ phải sang trái, từ bit trọng số thấp sang trọng số cao, vị trí so sánh với số 0

-------------------------------------------------------------------------
ví dụ
uint32_t a=0x12345678;


SWAP_BYTE32(&a);
/*a = 0x78563412*/

uint16_t b = 0x1234;

SWAP_BYTE32(&b);
/*b = 0x3412*/

uint32_t b = 0;
REG_BIT_SET32(&b,2);
/* b = 4*/

ass5:

- Write a program for managing the students which contains below info:
         Student’s name
         Student’s ID
         Math score
- Requirements:
         Using single linked list for management.
         Implement the function to add, remove, find a student information from list by student’s ID
         Implement a console menu for using feature add, remove, find
         Follow to coding convention as other assignments.


ass6:
Cho một mảng gồm 20 bytes “uint8_t assignment4[20] = {0xFF, 0xFF,…,0xFF}” dùng để lưu trữ các giá trị từ 0 đến 100. Dùng danh sách liên kết đơn để quản lý các phần tử trong mảng theo giá trị từ thấp đến cao và viết “menu” chương trình cho phép người dùng: + Nhập 1 giá trị vào 1 phần tử chỉ định của mảng trên (Dùng phím 1 để chọn option này)
    Vị trí từ 0 đến 19. Báo lỗi nếu:
        Vị trí người dùng chọn ngoài khoảng 0 đến 19
        Vi trí đã được nhập rồi.
    Giá trị từ 0 đến 100. Báo lỗi nếu:
        Giá trị người dùng chọn ngoài khoảng 0 đến 100
        Giá trị người dùng chọn đã tồn tại ở trong mảng.
+ Xóa 1 giá trị nào đó trong mảng trên (Dùng phím 2 để chọn option này)
    Sau khi chọn option này, người dùng sẽ chọn 1 giá trị từ 0 đến 100 để xóa, ví dụ người dùng chọn 50:
        Nếu giá trị này nằm trong mảng trên thì xóa phần tử này khỏi mảng.
        Nếu giá trị này không nằm trong mảng, báo lỗi không tồn tại.
    Nếu giá trị người dùng chọn ngoài khoảng từ 0 đến 100, báo lỗi giá trị chọn không đúng.
+ In giá trị các phần tử được nhập vào mảng (Dùng phím 3 để chọn option này)
    Sau khi chọn option này, người dùng chọn
        1: In các giá trị đã được nhập của mảng khi chưa sắp xếp từ thấp đến cao.
        2: In các giá trị đã được nhập của mảng sau khi đã sắp xếp (dùng danh sách liên kết đơn theo yêu cầu ban đầu).
Kết thúc chương trình (Dùng phím 4 để chọn option này). Chú ý: Không được dùng các hàm cấp phát bộ nhớ động. Timeline: 11/2/2022 - 22/2/2022